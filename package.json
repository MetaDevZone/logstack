{
  "name": "log-archiver",
  "version": "1.0.2",
  "description": "Complete Node.js logging solution with 6 integration methods, S3 bidirectional operations, advanced analytics, and multi-cloud storage support for enterprise-scale applications.",
  "main": "main.js",
  "types": "dist/index.d.ts",
  "bin": {
    "log-archiver": "cli.js"
  },
  "scripts": {
    "build": "tsc",
    "start": "node dist/index.js",
    "server": "node server.js",
    "server:dev": "node server.js --env development --port 4000",
    "server:prod": "node server.js --env production --port 4000 --api-key secure-production-key",
    "cli": "node cli.js",
    "init-config": "node cli.js init-config",
    "service:api": "node examples/multi-service-cli.js api",
    "service:kafka": "node examples/multi-service-cli.js kafka",
    "service:redis": "node examples/multi-service-cli.js redis",
    "service:rabbitmq": "node examples/multi-service-cli.js rabbitmq",
    "service:websocket": "node examples/multi-service-cli.js websocket",
    "service:multi": "node examples/multi-service-cli.js multi",
    "service:help": "node examples/multi-service-cli.js help",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:compression": "npx ts-node test/compression.test.ts",
    "test:masking": "npx ts-node test/dataMasking.test.ts",
    "lint": "echo 'Add ESLint configuration'",
    "dev": "ts-node examples/basic.ts",
    "test:basic": "npm run build && node dist/examples/basic.js",
    "test:existing-db": "npm run build && node dist/examples/testExistingDb.js",
    "test:sample-data": "npm run build && node dist/examples/testWithSampleData.js",
    "inspect:apilogs": "npx ts-node examples/inspectApiLogs.ts",
    "test:apilogs": "npx ts-node examples/testWithApiLogsCollection.ts",
    "example:flexible": "npx ts-node examples/flexibleApiLogs.ts",
    "practical:setup": "npx ts-node examples/practicalExample.ts setup",
    "practical:cloud": "npx ts-node examples/practicalExample.ts cloud",
    "practical:inspect": "npx ts-node examples/practicalExample.ts inspect",
    "direct:process": "npx ts-node examples/directApiLogProcessing.ts process",
    "direct:range": "npx ts-node examples/directApiLogProcessing.ts range",
    "simple:process": "npx ts-node examples/simpleProcessor.ts process",
    "simple:check": "npx ts-node examples/simpleProcessor.ts check",
    "job:create-and-process": "npx ts-node examples/jobProcessing.ts create-and-process",
    "job:current-hour": "npx ts-node examples/jobProcessing.ts current-hour",
    "job:date-range": "npx ts-node examples/jobProcessing.ts date-range",
    "example:custom-collections": "npx ts-node examples/customCollectionNames.ts",
    "example:organized-output": "npx ts-node examples/organizedOutputDirectory.ts",
    "example:multiple-dirs": "npx ts-node examples/organizedOutputDirectory.ts multiple",
    "example:compression": "npx ts-node examples/compressionExample.ts",
    "example:compression:production": "npx ts-node examples/compressionExample.ts production",
    "example:compression:compare": "npx ts-node examples/compressionExample.ts compare",
    "example:masking": "npx ts-node examples/dataMaskingExample.ts",
    "example:masking:production": "npx ts-node examples/dataMaskingExample.ts production",
    "example:masking:environment": "npx ts-node examples/dataMaskingExample.ts environment",
    "example:masking:demo": "npx ts-node examples/dataMaskingExample.ts demo",
    "test:aws": "npx ts-node examples/testAWS.ts",
    "test:aws-performance": "npx ts-node examples/testAWS.ts --performance",
    "test:aws-regions": "npx ts-node examples/testAWS.ts --regions",
    "final-test": "npx ts-node examples/finalComprehensiveTest.ts",
    "final-test:notes": "npx ts-node examples/finalComprehensiveTest.ts --notes",
    "final-test:analytics": "npx ts-node examples/finalComprehensiveTest.ts --analytics-only",
    "test:final-local": "npx ts-node examples/finalLocalTest.ts",
    "test:final-local:quick": "npx ts-node examples/finalLocalTest.ts --quick",
    "test:final-local:analytics": "npx ts-node examples/finalLocalTest.ts --analytics",
    "test:final-local:validate": "npx ts-node examples/finalLocalTest.ts --validate",
    "example:s3": "npm run build && node dist/examples/multiProvider.js s3",
    "example:gcs": "npm run build && node dist/examples/multiProvider.js gcs",
    "example:azure": "npm run build && node dist/examples/multiProvider.js azure",
    "example:local": "npm run build && node dist/examples/multiProvider.js local",
    "test:complete": "npm run build && node examples/complete-implementation.js",
    "test:complete:setup": "cp .env.complete-test .env && echo 'Please edit .env with your AWS credentials'",
    "localtest": "npm run build && node dist/examples/test.js local",
    "docs:serve": "node docs/website/server.js",
    "docs:serve:python": "cd docs/website && python -m http.server 3000",
    "docs:build": "echo 'âœ… Documentation is ready in docs/website/ - Run npm run docs:serve to start server'",
    "docs:dev": "npm run docs:serve",
    "docs:open": "npm run docs:serve",
    "publish:docs": "npm run docs:build && echo 'ðŸš€ Deploy docs/website/ to your hosting provider'"
  },
  "keywords": [
    "logging",
    "logs",
    "analytics",
    "monitoring",
    "s3",
    "aws",
    "kafka",
    "redis",
    "rabbitmq",
    "websocket",
    "mongodb",
    "enterprise",
    "microservices",
    "realtime",
    "dashboard",
    "api-logs",
    "performance",
    "scalable",
    "nodejs",
    "typescript",
    "cron",
    "cloud-storage",
    "data-processing"
  ],
  "author": "Your Name",
  "license": "MIT",
  "dependencies": {
    "@azure/storage-blob": "^12.18.0",
    "@google-cloud/storage": "^7.7.0",
    "amqplib": "^0.10.9",
    "aws-sdk": "^2.1564.0",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^17.2.1",
    "express": "^4.18.2",
    "express-rate-limit": "^7.1.5",
    "helmet": "^7.1.0",
    "kafkajs": "^2.2.4",
    "mongoose": "^7.6.0",
    "node-cron": "^3.0.3",
    "node-fetch": "^2.6.1",
    "redis": "^4.7.1",
    "winston": "^3.11.0",
    "ws": "^8.18.3"
  },
  "devDependencies": {
    "@types/express": "^5.0.3",
    "@types/jest": "^30.0.0",
    "@types/mongoose": "^5.11.97",
    "@types/node": "^20.11.30",
    "jest": "^30.0.5",
    "ts-jest": "^29.4.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.4.5"
  },
  "exports": {
    ".": "./main.js",
    "./production-setup": "./production-setup.js",
    "./secure-file-api": "./secure-file-api.js", 
    "./file-search-api": "./file-search-api.js",
    "./client": {
      "require": "./lib/client.js",
      "import": "./lib/client.js"
    }
  },
  "directories": {
    "doc": "docs",
    "example": "examples",
    "lib": "lib",
    "test": "test"
  }
}
